<PERSON> !client localhost 576
<ENiX>   Natural Language Processing
Pid: 8311

<PERSON> : { 0 2 4 6 8 10 ? 14 } :learn { test }
<PERSON> : { test } :debug
<ENiX>   ============================================================
Name                    test Grammar                       ?
Purpose                    ? Emotion                       ?
First Time          21:27:59-2018/01/13
Last Time           18:29:14-2018/01/21
Probability                1 Commands                      ?
------------------------------------------------------------
:NEURALNET                    3 1 1 1 8 2 2 4 1 2 8 0 0 0 0 0 0 0 0 1 1 1 8 4 2 4 1 2 8 1 0 0 0 0 0 0 0 1 1 1 8 8 2 4 1 2 8 2 0 0 0 0 0 0 0 
============================================================

<PERSON> : { 0 1 2 3 4 5 6 7 } :execute { test } :answer
<ENiX>   0 2 4 6 8 10 12 14

<PERSON> : { 0 1 2 3 4 5 6 7 } :understood :answer
<ENiX>   YES

<PERSON> : { 2 3 5 7 11 13 17 19 } :understood :answer
<ENiX>   NO

<PERSON> : { 0 1 2 3 4 5 3 7 } :oddman :answer
<ENiX>   6

<PERSON> : { 0 1 2 3 4 5 6 7 } :oddman :answer
<ENiX>   -1

<PERSON> : { 2 3 5 7 11 13 17 19 } :learn { primes }
<PERSON> : { primes } :debug
<ENiX>   ============================================================
Name                  primes Grammar                       ?
Purpose                    ? Emotion                       ?
First Time          00:18:20-2018/01/21
Last Time           18:29:36-2018/01/21
Probability                1 Commands                      ?
------------------------------------------------------------
:NEURALNET                    5 1 3 3 8 1 209 256 2 1 13 8 0 1 2 0 0 0 0 0 1 3 4 8 2 2006 4096 3 6 13 7 8 0 1 0 2 0 0 0 0 1 3 4 8 4 401 4096 3 1 9 1 8 0 1 1 2 0 0 0 0 1 2 2 8 8 4 16 1 4 8 1 2 0 0 0 0 0 0 1 2 2 8 16 8 16 1 8 8 1 2 0 0 0 0 0 0 
============================================================

<PERSON> : { primes } :showneural
<ENiX>   -[Neural Network Summary]----
0:  ( (0 :NOR     1)  :NOT-OR  2) 
1:  ( (0 :XOR     1)  :NAND     (0 :NOT-OR  2) ) 
2:  ( (0 :NOR     1)  :NOR      (1 :NXOR    2) ) 
3:  (1 :NOT-AND 2) 
4:  (1 :AND     2) 



<PERSON> : { 0 1 2 3 4 5 6 7 } :execute { primes }
<PERSON> :answer
<ENiX>   2 3 5 7 11 13 17 19

<PERSON> : { 0 1 2 3 4 5 3 7 } :learn { test }
<PERSON> : { 0 1 2 3 4 5 3 7 } :oddman :answer
<ENiX>   6

<PERSON> : { 0 1 2 3 4 5 3 7 } :oddman :execute { test } :answer
<ENiX>   3

